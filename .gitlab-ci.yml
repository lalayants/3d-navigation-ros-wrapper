image: docker:23

workflow:
  rules:
    - if: $CI_COMMIT_TAG != null || $CI_COMMIT_BRANCH == "main"

services:
  - docker:23-dind

variables:
  REGISTRY_URL: $CI_REGISTRY_IMAGE

  IMAGE: registry.gitlab.com/beerlab/cpc/utils/cps_ros_base_docker:latest
  # Tell 'docker:dind' to enable TLS (recommended)
  # and generate certificates in the specified directory.
  DOCKER_TLS_CERTDIR: "/certs"

  CONTAINER_TAG_IMAGE: $REGISTRY_URL:$CI_COMMIT_TAG
  CONTAINER_RELEASE_IMAGE: $REGISTRY_URL:latest

stages:
  - BuildDocker

.before_script_template: &docker-login
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk update && apk add git

build-tag-docker-image:
  stage: BuildDocker
  rules:
    - if: $CI_COMMIT_TAG != null
  <<: *docker-login
  script:
    - docker buildx create --use
    - docker buildx build --provenance=false --push
      --platform linux/arm64/v8,linux/amd64
      --cache-from $CONTAINER_RELEASE_IMAGE -t $CONTAINER_TAG_IMAGE . 
      --build-arg BASE_IMG=$IMAGE --build-arg BUILDKIT_INLINE_CACHE=1

build-release-docker-image:
  stage: BuildDocker
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  <<: *docker-login
  script:
    - docker buildx create --use
    - docker buildx build --provenance=false --push
      --platform linux/arm64/v8,linux/amd64
      --cache-from $CONTAINER_RELEASE_IMAGE -t $CONTAINER_RELEASE_IMAGE . 
      --build-arg BASE_IMG=$IMAGE --build-arg BUILDKIT_INLINE_CACHE=1
